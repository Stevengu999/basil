{
  "contractName": "BasilTestUpgrade",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "highestDonation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "b",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "wallet",
          "type": "address"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "r",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradeabilityOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "g",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_r",
          "type": "uint256"
        },
        {
          "name": "_g",
          "type": "uint256"
        },
        {
          "name": "_b",
          "type": "uint256"
        }
      ],
      "name": "donate",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "wallet",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Withdrawal",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "donor",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "r",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "g",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "b",
          "type": "uint256"
        }
      ],
      "name": "NewDonation",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "sayHi",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052600080806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050506100653361006a64010000000002610a37176401000000009004565b6100ae565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b610abb806100bd6000396000f3006060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063043f08e7146100e05780630c49c36c14610109578063158ef93e146101975780634df7e3d0146101c457806351cff8d9146101ed57806354fd4d50146102265780635c60da1b146102b45780636c8ae38c146103095780636fde8202146103325780637b103999146103875780638da5cb5b146103dc578063c4d66de814610431578063e2179b8e1461046a578063ef88f48b14610493578063f2fde38b146104bd575b600080fd5b34156100eb57600080fd5b6100f36104f6565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61011c6104fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015c578082015181840152602081019050610141565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a257600080fd5b6101aa61053f565b604051808215151515815260200191505060405180910390f35b34156101cf57600080fd5b6101d7610552565b6040518082815260200191505060405180910390f35b34156101f857600080fd5b610224600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610558565b005b341561023157600080fd5b6102396106a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027957808201518184015260208101905061025e565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102bf57600080fd5b6102c7610751565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561031457600080fd5b61031c61077b565b6040518082815260200191505060405180910390f35b341561033d57600080fd5b610345610781565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561039257600080fd5b61039a6107a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103e757600080fd5b6103ef6107d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561043c57600080fd5b610468600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107fa565b005b341561047557600080fd5b61047d61083d565b6040518082815260200191505060405180910390f35b6104bb6004808035906020019091908035906020019091908035906020019091905050610843565b005b34156104c857600080fd5b6104f4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610910565b005b60095481565b610504610a7b565b6040805190810160405280600381526020017f4869210000000000000000000000000000000000000000000000000000000000815250905090565b600860009054906101000a900460ff1681565b60075481565b60006105626107d0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561059b57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff16311115156105c157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156105fd57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163190508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561065757600080fd5b8173ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a25050565b6106b1610a7b565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b5050505050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600860009054906101000a900460ff1615151561081657600080fd5b61081f81610a37565b6001600860006101000a81548160ff02191690831515021790555050565b60065481565b6101008310151561085357600080fd5b6101008210151561086357600080fd5b6101008110151561087357600080fd5b6009543411151561088357600080fd5b826005819055508160068190555080600781905550346009819055503373ffffffffffffffffffffffffffffffffffffffff167f0ca24adc7d2dbdb5d6700e357e2a1fc3a877de188791c4add93b5460ad524686346005546006546007546040518085815260200184815260200183815260200182815260200194505050505060405180910390a2505050565b6109186107d0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561095157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561098d57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06109b66107d0565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1610a3481610a37565b50565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6020604051908101604052806000815250905600a165627a7a72305820ef07de89f59b1be1489ef82da0276e822543bf863420d4a7ea19dc2dfd16ffb20029",
  "deployedBytecode": "0x6060604052600436106100db576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063043f08e7146100e05780630c49c36c14610109578063158ef93e146101975780634df7e3d0146101c457806351cff8d9146101ed57806354fd4d50146102265780635c60da1b146102b45780636c8ae38c146103095780636fde8202146103325780637b103999146103875780638da5cb5b146103dc578063c4d66de814610431578063e2179b8e1461046a578063ef88f48b14610493578063f2fde38b146104bd575b600080fd5b34156100eb57600080fd5b6100f36104f6565b6040518082815260200191505060405180910390f35b341561011457600080fd5b61011c6104fc565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561015c578082015181840152602081019050610141565b50505050905090810190601f1680156101895780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156101a257600080fd5b6101aa61053f565b604051808215151515815260200191505060405180910390f35b34156101cf57600080fd5b6101d7610552565b6040518082815260200191505060405180910390f35b34156101f857600080fd5b610224600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610558565b005b341561023157600080fd5b6102396106a9565b6040518080602001828103825283818151815260200191508051906020019080838360005b8381101561027957808201518184015260208101905061025e565b50505050905090810190601f1680156102a65780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34156102bf57600080fd5b6102c7610751565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561031457600080fd5b61031c61077b565b6040518082815260200191505060405180910390f35b341561033d57600080fd5b610345610781565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561039257600080fd5b61039a6107a7565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156103e757600080fd5b6103ef6107d0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561043c57600080fd5b610468600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107fa565b005b341561047557600080fd5b61047d61083d565b6040518082815260200191505060405180910390f35b6104bb6004808035906020019091908035906020019091908035906020019091905050610843565b005b34156104c857600080fd5b6104f4600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610910565b005b60095481565b610504610a7b565b6040805190810160405280600381526020017f4869210000000000000000000000000000000000000000000000000000000000815250905090565b600860009054906101000a900460ff1681565b60075481565b60006105626107d0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561059b57600080fd5b60003073ffffffffffffffffffffffffffffffffffffffff16311115156105c157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16141515156105fd57600080fd5b3073ffffffffffffffffffffffffffffffffffffffff163190508173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050151561065757600080fd5b8173ffffffffffffffffffffffffffffffffffffffff167f7fcf532c15f0a6db0bd6d0e038bea71d30d808c7d98cb3bf7268a95bf5081b65826040518082815260200191505060405180910390a25050565b6106b1610a7b565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156107475780601f1061071c57610100808354040283529160200191610747565b820191906000526020600020905b81548152906001019060200180831161072a57829003601f168201915b5050505050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600860009054906101000a900460ff1615151561081657600080fd5b61081f81610a37565b6001600860006101000a81548160ff02191690831515021790555050565b60065481565b6101008310151561085357600080fd5b6101008210151561086357600080fd5b6101008110151561087357600080fd5b6009543411151561088357600080fd5b826005819055508160068190555080600781905550346009819055503373ffffffffffffffffffffffffffffffffffffffff167f0ca24adc7d2dbdb5d6700e357e2a1fc3a877de188791c4add93b5460ad524686346005546006546007546040518085815260200184815260200183815260200182815260200194505050505060405180910390a2505050565b6109186107d0565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561095157600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561098d57600080fd5b7f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e06109b66107d0565b82604051808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019250505060405180910390a1610a3481610a37565b50565b80600460006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6020604051908101604052806000815250905600a165627a7a72305820ef07de89f59b1be1489ef82da0276e822543bf863420d4a7ea19dc2dfd16ffb20029",
  "sourceMap": "86:111:2:-;;;716:3:0;413:8:8;554::11;542:9;;:20;;;;;;;;;;;;;;;;;;479:88;331:107:8;607:20:5;616:10;607:8;;;;;:20;;;:::i;:::-;86:111:2;;411:73:6;471:8;462:6;;:17;;;;;;;;;;;;;;;;;;411:73;:::o;86:111:2:-;;;;;;;",
  "deployedSourceMap": "86:111:2:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:30:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;126:69:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;535:23:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;457:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1337:215;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:74:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;904:89:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;417:16:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:34:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1083:78:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:119:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;437:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;893:317;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;940:173:5;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:30:0;;;;:::o;126:69:2:-;164:6;;:::i;:::-;178:12;;;;;;;;;;;;;;;;;;;;126:69;:::o;535:23:0:-;;;;;;;;;;;;;:::o;457:16::-;;;;:::o;1337:215::-;1460:13;759:7:5;:5;:7::i;:::-;745:21;;:10;:21;;;737:30;;;;;;;;1417:1:0;1402:4;:12;;;:16;1394:25;;;;;;;;1451:1;1433:20;;:6;:20;;;;1425:29;;;;;;;;1476:4;:12;;;1460:28;;1494:6;:15;;:22;1510:5;1494:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1533:6;1522:25;;;1541:5;1522:25;;;;;;;;;;;;;;;;;;1337:215;;:::o;708:74:11:-;748:6;;:::i;:::-;769:8;762:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;708:74;:::o;904:89::-;951:7;973:15;;;;;;;;;;;966:22;;904:89;:::o;417:16:0:-;;;;:::o;292:34:8:-;;;;;;;;;;;;;:::o;1083:78:11:-;1124:8;1147:9;;;;;;;;;;;1140:16;;1083:78;:::o;289:71:6:-;327:7;349:6;;;;;;;;;;;342:13;;289:71;:::o;1214:119:0:-;1271:11;;;;;;;;;;;1270:12;1262:21;;;;;;;;1289:15;1298:5;1289:8;:15::i;:::-;1324:4;1310:11;;:18;;;;;;;;;;;;;;;;;;1214:119;:::o;437:16::-;;;;:::o;893:317::-;981:3;976:2;:8;968:17;;;;;;;;1004:3;999:2;:8;991:17;;;;;;;;1027:3;1022:2;:8;1014:17;;;;;;;;1057:15;;1045:9;:27;1037:36;;;;;;;;1084:2;1080:1;:6;;;;1096:2;1092:1;:6;;;;1108:2;1104:1;:6;;;;1134:9;1116:15;:27;;;;1168:10;1149:56;;;1180:9;1197:1;;1200;;1203;;1149:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;893:317;;;:::o;940:173:5:-;759:7;:5;:7::i;:::-;745:21;;:10;:21;;;737:30;;;;;;;;1036:1;1016:22;;:8;:22;;;;1008:31;;;;;;;;1045:39;1066:7;:5;:7::i;:::-;1075:8;1045:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1090:18;1099:8;1090;:18::i;:::-;940:173;:::o;411:73:6:-;471:8;462:6;;:17;;;;;;;;;;;;;;;;;;411:73;:::o;86:111:2:-;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport '../Basil.sol';\n\n/**\n * @title BasilTestUpgrade \n */\ncontract BasilTestUpgrade is Basil {\n\n  function sayHi() public pure returns (string) {\n    return \"Hi!\";\n  }\n}\n",
  "sourcePath": "/home/ajs/basil/contracts/mocks/BasilTestUpgrade.sol",
  "ast": {
    "absolutePath": "/home/ajs/basil/contracts/mocks/BasilTestUpgrade.sol",
    "exportedSymbols": {
      "BasilTestUpgrade": [
        240
      ]
    },
    "id": 241,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/ajs/basil/contracts/Basil.sol",
        "file": "../Basil.sol",
        "id": 229,
        "nodeType": "ImportDirective",
        "scope": 241,
        "sourceUnit": 170,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 230,
              "name": "Basil",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 169,
              "src": "115:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Basil_$169",
                "typeString": "contract Basil"
              }
            },
            "id": 231,
            "nodeType": "InheritanceSpecifier",
            "src": "115:5:2"
          }
        ],
        "contractDependencies": [
          169,
          473,
          496,
          639,
          782
        ],
        "contractKind": "contract",
        "documentation": "@title BasilTestUpgrade ",
        "fullyImplemented": true,
        "id": 240,
        "linearizedBaseContracts": [
          240,
          169,
          473,
          496,
          639,
          782
        ],
        "name": "BasilTestUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "172:23:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "486921",
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "185:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9f3b39a5c55df6cfcadf9b71aed8bbd32c7050e2c9938aaa34f9cdce548fdc76",
                      "typeString": "literal_string \"Hi!\""
                    },
                    "value": "Hi!"
                  },
                  "functionReturnParameters": 235,
                  "id": 237,
                  "nodeType": "Return",
                  "src": "178:12:2"
                }
              ]
            },
            "id": 239,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "sayHi",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "164:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:8:2"
            },
            "scope": 240,
            "src": "126:69:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 241,
        "src": "86:111:2"
      }
    ],
    "src": "0:198:2"
  },
  "legacyAST": {
    "absolutePath": "/home/ajs/basil/contracts/mocks/BasilTestUpgrade.sol",
    "exportedSymbols": {
      "BasilTestUpgrade": [
        240
      ]
    },
    "id": 241,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 228,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:2"
      },
      {
        "absolutePath": "/home/ajs/basil/contracts/Basil.sol",
        "file": "../Basil.sol",
        "id": 229,
        "nodeType": "ImportDirective",
        "scope": 241,
        "sourceUnit": 170,
        "src": "26:22:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 230,
              "name": "Basil",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 169,
              "src": "115:5:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Basil_$169",
                "typeString": "contract Basil"
              }
            },
            "id": 231,
            "nodeType": "InheritanceSpecifier",
            "src": "115:5:2"
          }
        ],
        "contractDependencies": [
          169,
          473,
          496,
          639,
          782
        ],
        "contractKind": "contract",
        "documentation": "@title BasilTestUpgrade ",
        "fullyImplemented": true,
        "id": 240,
        "linearizedBaseContracts": [
          240,
          169,
          473,
          496,
          639,
          782
        ],
        "name": "BasilTestUpgrade",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 238,
              "nodeType": "Block",
              "src": "172:23:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "hexValue": "486921",
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "185:5:2",
                    "subdenomination": null,
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_9f3b39a5c55df6cfcadf9b71aed8bbd32c7050e2c9938aaa34f9cdce548fdc76",
                      "typeString": "literal_string \"Hi!\""
                    },
                    "value": "Hi!"
                  },
                  "functionReturnParameters": 235,
                  "id": 237,
                  "nodeType": "Return",
                  "src": "178:12:2"
                }
              ]
            },
            "id": 239,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": true,
            "modifiers": [],
            "name": "sayHi",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "140:2:2"
            },
            "payable": false,
            "returnParameters": {
              "id": 235,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 234,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 239,
                  "src": "164:6:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 233,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:6:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "163:8:2"
            },
            "scope": 240,
            "src": "126:69:2",
            "stateMutability": "pure",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 241,
        "src": "86:111:2"
      }
    ],
    "src": "0:198:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-04T20:49:50.832Z"
}