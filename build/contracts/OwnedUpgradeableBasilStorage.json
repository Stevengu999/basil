{
  "contractName": "OwnedUpgradeableBasilStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "highestDonation",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "b",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "implementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "r",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "upgradeabilityOwner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "g",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": "0x6060604052336000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506104cb806100536000396000f300606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063043f08e71461009e5780634df7e3d0146100c757806354fd4d50146100f05780635c60da1b1461017e5780636c8ae38c146101d35780636fde8202146101fc5780637b103999146102515780638da5cb5b146102a6578063e2179b8e146102fb575b600080fd5b34156100a957600080fd5b6100b1610324565b6040518082815260200191505060405180910390f35b34156100d257600080fd5b6100da61032a565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610103610330565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610143578082015181840152602081019050610128565b50505050905090810190601f1680156101705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018957600080fd5b6101916103d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101de57600080fd5b6101e6610402565b6040518082815260200191505060405180910390f35b341561020757600080fd5b61020f610408565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025c57600080fd5b610264610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102b157600080fd5b6102b961045b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030657600080fd5b61030e610485565b6040518082815260200191505060405180910390f35b60095481565b60075481565b61033861048b565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6020604051908101604052806000815250905600a165627a7a7230582038cd071551c65ea96d55afe177e7b7f349b2af8a30537a6958d45f9d8222b9f50029",
  "deployedBytecode": "0x606060405260043610610099576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff168063043f08e71461009e5780634df7e3d0146100c757806354fd4d50146100f05780635c60da1b1461017e5780636c8ae38c146101d35780636fde8202146101fc5780637b103999146102515780638da5cb5b146102a6578063e2179b8e146102fb575b600080fd5b34156100a957600080fd5b6100b1610324565b6040518082815260200191505060405180910390f35b34156100d257600080fd5b6100da61032a565b6040518082815260200191505060405180910390f35b34156100fb57600080fd5b610103610330565b6040518080602001828103825283818151815260200191508051906020019080838360005b83811015610143578082015181840152602081019050610128565b50505050905090810190601f1680156101705780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b341561018957600080fd5b6101916103d8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156101de57600080fd5b6101e6610402565b6040518082815260200191505060405180910390f35b341561020757600080fd5b61020f610408565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561025c57600080fd5b610264610432565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102b157600080fd5b6102b961045b565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561030657600080fd5b61030e610485565b6040518082815260200191505060405180910390f35b60095481565b60075481565b61033861048b565b60018054600181600116156101000203166002900480601f0160208091040260200160405190810160405280929190818152602001828054600181600116156101000203166002900480156103ce5780601f106103a3576101008083540402835291602001916103ce565b820191906000526020600020905b8154815290600101906020018083116103b157829003601f168201915b5050505050905090565b6000600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60055481565b6000600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600460009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60065481565b6020604051908101604052806000815250905600a165627a7a7230582038cd071551c65ea96d55afe177e7b7f349b2af8a30537a6958d45f9d8222b9f50029",
  "sourceMap": "367:84:4:-;;;558:10:14;536:9;;:33;;;;;;;;;;;;;;;;;;367:84:4;;;;;;",
  "deployedSourceMap": "367:84:4:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:30:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;301:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:74:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:2;8:100;;;99:1;94:3;90;84:5;80:1;75:3;71;64:6;52:2;49:1;45:3;40:15;;8:100;;;12:14;3:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;911:89:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;261:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;398:99:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1090:79:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;289:71:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;281:16:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;439:30;;;;:::o;301:16::-;;;;:::o;715:74:14:-;755:6;;:::i;:::-;776:8;769:15;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;715:74;:::o;911:89::-;958:7;980:15;;;;;;;;;;;973:22;;911:89;:::o;261:16:2:-;;;;:::o;398:99:11:-;450:7;472:20;;;;;;;;;;;465:27;;398:99;:::o;1090:79:14:-;1131:9;1155;;;;;;;;;;;1148:16;;1090:79;:::o;289:71:6:-;327:7;349:6;;;;;;;;;;;342:13;;289:71;:::o;281:16:2:-;;;;:::o;367:84:4:-;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport './BasilStorage.sol';\nimport 'zos-core/contracts/upgradeability/OwnedUpgradeabilityStorage.sol';\n\n/**\n * @title OwnedUpgradeableBasilStorage\n * @dev This is the storage necessary to perform upgradeable basils.\n * This means, required state variables for owned upgradeability purpose and those strictly related to basil contracts.\n */\ncontract OwnedUpgradeableBasilStorage is OwnedUpgradeabilityStorage, BasilStorage {}\n",
  "sourcePath": "/home/maraoz/git/zos/basil/contracts/OwnedUpgradeableBasilStorage.sol",
  "ast": {
    "absolutePath": "/home/maraoz/git/zos/basil/contracts/OwnedUpgradeableBasilStorage.sol",
    "exportedSymbols": {
      "OwnedUpgradeableBasilStorage": [
        239
      ]
    },
    "id": 240,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 232,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/home/maraoz/git/zos/basil/contracts/BasilStorage.sol",
        "file": "./BasilStorage.sol",
        "id": 233,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 174,
        "src": "26:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zos-core/contracts/upgradeability/OwnedUpgradeabilityStorage.sol",
        "file": "zos-core/contracts/upgradeability/OwnedUpgradeabilityStorage.sol",
        "id": 234,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 740,
        "src": "55:74:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 235,
              "name": "OwnedUpgradeabilityStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 739,
              "src": "408:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnedUpgradeabilityStorage_$739",
                "typeString": "contract OwnedUpgradeabilityStorage"
              }
            },
            "id": 236,
            "nodeType": "InheritanceSpecifier",
            "src": "408:26:4"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 237,
              "name": "BasilStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 173,
              "src": "436:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasilStorage_$173",
                "typeString": "contract BasilStorage"
              }
            },
            "id": 238,
            "nodeType": "InheritanceSpecifier",
            "src": "436:12:4"
          }
        ],
        "contractDependencies": [
          173,
          321,
          739,
          871
        ],
        "contractKind": "contract",
        "documentation": "@title OwnedUpgradeableBasilStorage\n@dev This is the storage necessary to perform upgradeable basils.\nThis means, required state variables for owned upgradeability purpose and those strictly related to basil contracts.",
        "fullyImplemented": true,
        "id": 239,
        "linearizedBaseContracts": [
          239,
          173,
          321,
          739,
          871
        ],
        "name": "OwnedUpgradeableBasilStorage",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 240,
        "src": "367:84:4"
      }
    ],
    "src": "0:452:4"
  },
  "legacyAST": {
    "absolutePath": "/home/maraoz/git/zos/basil/contracts/OwnedUpgradeableBasilStorage.sol",
    "exportedSymbols": {
      "OwnedUpgradeableBasilStorage": [
        239
      ]
    },
    "id": 240,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 232,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:4"
      },
      {
        "absolutePath": "/home/maraoz/git/zos/basil/contracts/BasilStorage.sol",
        "file": "./BasilStorage.sol",
        "id": 233,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 174,
        "src": "26:28:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "zos-core/contracts/upgradeability/OwnedUpgradeabilityStorage.sol",
        "file": "zos-core/contracts/upgradeability/OwnedUpgradeabilityStorage.sol",
        "id": 234,
        "nodeType": "ImportDirective",
        "scope": 240,
        "sourceUnit": 740,
        "src": "55:74:4",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 235,
              "name": "OwnedUpgradeabilityStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 739,
              "src": "408:26:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OwnedUpgradeabilityStorage_$739",
                "typeString": "contract OwnedUpgradeabilityStorage"
              }
            },
            "id": 236,
            "nodeType": "InheritanceSpecifier",
            "src": "408:26:4"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 237,
              "name": "BasilStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 173,
              "src": "436:12:4",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_BasilStorage_$173",
                "typeString": "contract BasilStorage"
              }
            },
            "id": 238,
            "nodeType": "InheritanceSpecifier",
            "src": "436:12:4"
          }
        ],
        "contractDependencies": [
          173,
          321,
          739,
          871
        ],
        "contractKind": "contract",
        "documentation": "@title OwnedUpgradeableBasilStorage\n@dev This is the storage necessary to perform upgradeable basils.\nThis means, required state variables for owned upgradeability purpose and those strictly related to basil contracts.",
        "fullyImplemented": true,
        "id": 239,
        "linearizedBaseContracts": [
          239,
          173,
          321,
          739,
          871
        ],
        "name": "OwnedUpgradeableBasilStorage",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 240,
        "src": "367:84:4"
      }
    ],
    "src": "0:452:4"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-03-02T21:33:46.047Z"
}